/**
 * BeerProto
 *
 * Another beer format, written in protocol buffer.
 *
 * Copyright (c) 2020 Ross Merrigan
 */
syntax = "proto3";

package beerproto.v1;

import "beerproto/v1/measureable_units.proto";
import "beerproto/v1/timing.proto";
import "buf/validate/validate.proto";

// MiscellaneousBase provides unique properties to identify individual records of ingredients that are neither hops, nor provide a contribution to the gravity of wort.
message MiscellaneousBase {
  string name = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.min_len = 3
  ];
  string producer = 2;
  string product_id = 3;
  MiscellaneousBaseType type = 4 [
    (buf.validate.field).required = true,
    (buf.validate.field).enum = {
      not_in: [0]
    }
  ];
}

// MiscellaneousType collects the attributes of an ingredient to store as record information
message MiscellaneousType {
  MiscellaneousBase base = 1 [(buf.validate.field).required = true];
  string id = 2 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.uuid = true
  ];
  // Used to describe the purpose of the miscellaneous ingredient, e.g. whirlfloc is used for clarity.
  string use_for = 3;
  string notes = 4;
  MiscellaneousInventoryType inventory = 5;
}

enum MiscellaneousBaseType {
  MISCELLANEOUS_BASE_TYPE_UNSPECIFIED = 0;
  // spice
  MISCELLANEOUS_BASE_TYPE_SPICE = 1;
  // fining
  MISCELLANEOUS_BASE_TYPE_FINING = 2;
  // water agent
  MISCELLANEOUS_BASE_TYPE_WATER_AGENT = 3;
  // herb
  MISCELLANEOUS_BASE_TYPE_HERB = 4;
  // flavor
  MISCELLANEOUS_BASE_TYPE_FLAVOR = 5;
  // wood
  MISCELLANEOUS_BASE_TYPE_WOOD = 6;
  // other
  MISCELLANEOUS_BASE_TYPE_OTHER = 7;
}

// MiscellaneousAdditionType collects the attributes of each miscellaneous ingredient for use in a recipe
message MiscellaneousAdditionType {
  MiscellaneousBase base = 1 [(buf.validate.field).required = true];
  string id = 2 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.uuid = true
  ];
  // The timing object fully describes the timing of an addition with options for basis on time, gravity, or pH at any process step.
  TimingType timing = 3;
  oneof amount {
    option (buf.validate.oneof).required = true;
    MassType mass = 4;
    UnitType unit = 5;
    VolumeType volume = 6;
  }
}

message MiscellaneousInventoryType {
  oneof amount {
    option (buf.validate.oneof).required = true;

    MassType mass = 1;
    UnitType unit = 2;
    VolumeType volume = 3;
  }
}
